"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
exports.__esModule = true;
exports.default = void 0;
var _FallbackVisitor = _interopRequireDefault(require("./visitors/FallbackVisitor.cjs"));
var _index = _interopRequireDefault(require("./visitors/json-schema/index.cjs"));
var _IdVisitor = _interopRequireDefault(require("./visitors/json-schema/IdVisitor.cjs"));
var _$schemaVisitor = _interopRequireDefault(require("./visitors/json-schema/$schemaVisitor.cjs"));
var _MultipleOfVisitor = _interopRequireDefault(require("./visitors/json-schema/MultipleOfVisitor.cjs"));
var _MaximumVisitor = _interopRequireDefault(require("./visitors/json-schema/MaximumVisitor.cjs"));
var _ExclusiveMaximumVisitor = _interopRequireDefault(require("./visitors/json-schema/ExclusiveMaximumVisitor.cjs"));
var _MinimumVisitor = _interopRequireDefault(require("./visitors/json-schema/MinimumVisitor.cjs"));
var _ExclusiveMinimumVisitor = _interopRequireDefault(require("./visitors/json-schema/ExclusiveMinimumVisitor.cjs"));
var _MaxLengthVisitor = _interopRequireDefault(require("./visitors/json-schema/MaxLengthVisitor.cjs"));
var _MinLengthVisitor = _interopRequireDefault(require("./visitors/json-schema/MinLengthVisitor.cjs"));
var _PatternVisitor = _interopRequireDefault(require("./visitors/json-schema/PatternVisitor.cjs"));
var _ItemsVisitor = _interopRequireDefault(require("./visitors/json-schema/ItemsVisitor.cjs"));
var _MaxItemsVisitor = _interopRequireDefault(require("./visitors/json-schema/MaxItemsVisitor.cjs"));
var _MinItemsVisitor = _interopRequireDefault(require("./visitors/json-schema/MinItemsVisitor.cjs"));
var _UniqueItemsVisitor = _interopRequireDefault(require("./visitors/json-schema/UniqueItemsVisitor.cjs"));
var _MaxPropertiesVisitor = _interopRequireDefault(require("./visitors/json-schema/MaxPropertiesVisitor.cjs"));
var _MinPropertiesVisitor = _interopRequireDefault(require("./visitors/json-schema/MinPropertiesVisitor.cjs"));
var _RequiredVisitor = _interopRequireDefault(require("./visitors/json-schema/RequiredVisitor.cjs"));
var _PropertiesVisitor = _interopRequireDefault(require("./visitors/json-schema/PropertiesVisitor.cjs"));
var _PatternPropertiesVisitor = _interopRequireDefault(require("./visitors/json-schema/PatternPropertiesVisitor.cjs"));
var _DependenciesVisitor = _interopRequireDefault(require("./visitors/json-schema/DependenciesVisitor.cjs"));
var _EnumVisitor = _interopRequireDefault(require("./visitors/json-schema/EnumVisitor.cjs"));
var _TypeVisitor = _interopRequireDefault(require("./visitors/json-schema/TypeVisitor.cjs"));
var _AllOfVisitor = _interopRequireDefault(require("./visitors/json-schema/AllOfVisitor.cjs"));
var _AnyOfVisitor = _interopRequireDefault(require("./visitors/json-schema/AnyOfVisitor.cjs"));
var _OneOfVisitor = _interopRequireDefault(require("./visitors/json-schema/OneOfVisitor.cjs"));
var _DefinitionsVisitor = _interopRequireDefault(require("./visitors/json-schema/DefinitionsVisitor.cjs"));
var _TitleVisitor = _interopRequireDefault(require("./visitors/json-schema/TitleVisitor.cjs"));
var _DescriptionVisitor = _interopRequireDefault(require("./visitors/json-schema/DescriptionVisitor.cjs"));
var _DefaultVisitor = _interopRequireDefault(require("./visitors/json-schema/DefaultVisitor.cjs"));
var _FormatVisitor = _interopRequireDefault(require("./visitors/json-schema/FormatVisitor.cjs"));
var _BaseVisitor = _interopRequireDefault(require("./visitors/json-schema/BaseVisitor.cjs"));
var _LinksVisitor = _interopRequireDefault(require("./visitors/json-schema/LinksVisitor.cjs"));
var _ReadOnlyVisitor = _interopRequireDefault(require("./visitors/json-schema/ReadOnlyVisitor.cjs"));
var _index2 = _interopRequireDefault(require("./visitors/json-schema/json-reference/index.cjs"));
var _$RefVisitor = _interopRequireDefault(require("./visitors/json-schema/json-reference/$RefVisitor.cjs"));
var _JSONSchemaOrJSONReferenceVisitor = _interopRequireDefault(require("./visitors/json-schema/JSONSchemaOrJSONReferenceVisitor.cjs"));
var _index3 = _interopRequireDefault(require("./visitors/json-schema/media/index.cjs"));
var _BinaryEncodingVisitor = _interopRequireDefault(require("./visitors/json-schema/media/BinaryEncodingVisitor.cjs"));
var _TypeVisitor2 = _interopRequireDefault(require("./visitors/json-schema/media/TypeVisitor.cjs"));
var _index4 = _interopRequireDefault(require("./visitors/json-schema/link-description/index.cjs"));
var _HrefVisitor = _interopRequireDefault(require("./visitors/json-schema/link-description/HrefVisitor.cjs"));
var _RelVisitor = _interopRequireDefault(require("./visitors/json-schema/link-description/RelVisitor.cjs"));
var _TitleVisitor2 = _interopRequireDefault(require("./visitors/json-schema/link-description/TitleVisitor.cjs"));
var _MediaTypeVisitor = _interopRequireDefault(require("./visitors/json-schema/link-description/MediaTypeVisitor.cjs"));
var _MethodVisitor = _interopRequireDefault(require("./visitors/json-schema/link-description/MethodVisitor.cjs"));
var _EncTypeVisitor = _interopRequireDefault(require("./visitors/json-schema/link-description/EncTypeVisitor.cjs"));
/**
 * Specification object allows us to have complete control over visitors
 * when traversing the ApiDOM.
 * Specification also allows us to create amended refractors from
 * existing ones by manipulating it.
 *
 * Note: Specification object allows to use absolute internal JSON pointers.
 */
const specification = {
  visitors: {
    value: _FallbackVisitor.default,
    JSONSchemaOrJSONReferenceVisitor: _JSONSchemaOrJSONReferenceVisitor.default,
    document: {
      objects: {
        JSONSchema: {
          $visitor: _index.default,
          fixedFields: {
            // core vocabulary
            id: _IdVisitor.default,
            $schema: _$schemaVisitor.default,
            // validation vocabulary
            // validation keywords for numeric instances (number and integer)
            multipleOf: _MultipleOfVisitor.default,
            maximum: _MaximumVisitor.default,
            exclusiveMaximum: _ExclusiveMaximumVisitor.default,
            minimum: _MinimumVisitor.default,
            exclusiveMinimum: _ExclusiveMinimumVisitor.default,
            // validation keywords for strings
            maxLength: _MaxLengthVisitor.default,
            minLength: _MinLengthVisitor.default,
            pattern: _PatternVisitor.default,
            // validation keywords for arrays
            additionalItems: _JSONSchemaOrJSONReferenceVisitor.default,
            items: _ItemsVisitor.default,
            maxItems: _MaxItemsVisitor.default,
            minItems: _MinItemsVisitor.default,
            uniqueItems: _UniqueItemsVisitor.default,
            // validation keywords for objects
            maxProperties: _MaxPropertiesVisitor.default,
            minProperties: _MinPropertiesVisitor.default,
            required: _RequiredVisitor.default,
            properties: _PropertiesVisitor.default,
            additionalProperties: _JSONSchemaOrJSONReferenceVisitor.default,
            patternProperties: _PatternPropertiesVisitor.default,
            dependencies: _DependenciesVisitor.default,
            // validation keywords for any instance type
            enum: _EnumVisitor.default,
            type: _TypeVisitor.default,
            allOf: _AllOfVisitor.default,
            anyOf: _AnyOfVisitor.default,
            oneOf: _OneOfVisitor.default,
            not: _JSONSchemaOrJSONReferenceVisitor.default,
            definitions: _DefinitionsVisitor.default,
            // metadata keywords
            title: _TitleVisitor.default,
            description: _DescriptionVisitor.default,
            default: _DefaultVisitor.default,
            // semantic validation with "format"
            format: _FormatVisitor.default,
            // JSON Hyper-Schema
            base: _BaseVisitor.default,
            links: _LinksVisitor.default,
            media: {
              $ref: '#/visitors/document/objects/Media'
            },
            readOnly: _ReadOnlyVisitor.default
          }
        },
        JSONReference: {
          $visitor: _index2.default,
          fixedFields: {
            $ref: _$RefVisitor.default
          }
        },
        Media: {
          $visitor: _index3.default,
          fixedFields: {
            binaryEncoding: _BinaryEncodingVisitor.default,
            type: _TypeVisitor2.default
          }
        },
        LinkDescription: {
          $visitor: _index4.default,
          fixedFields: {
            href: _HrefVisitor.default,
            rel: _RelVisitor.default,
            title: _TitleVisitor2.default,
            targetSchema: _JSONSchemaOrJSONReferenceVisitor.default,
            mediaType: _MediaTypeVisitor.default,
            method: _MethodVisitor.default,
            encType: _EncTypeVisitor.default,
            schema: _JSONSchemaOrJSONReferenceVisitor.default
          }
        }
      }
    }
  }
};
var _default = exports.default = specification;